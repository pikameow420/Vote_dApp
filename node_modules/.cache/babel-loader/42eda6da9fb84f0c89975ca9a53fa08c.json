{"ast":null,"code":"import loglevel from 'loglevel';\nimport _defineProperty from '@babel/runtime/helpers/defineProperty';\nimport { getPublic, sign, encrypt, decrypt } from '@toruslabs/eccrypto';\nimport { get } from '@toruslabs/http-helpers';\nimport { setupMultiplex, PostMessageStream, SafeEventEmitter, createStreamMiddleware, JRPCEngine, createIdRemapMiddleware, getRpcPromiseCallback } from '@toruslabs/openlogin-jrpc';\nimport { base64url, keccak, safeatob, randomId, jsonToBase64 } from '@toruslabs/openlogin-utils';\nimport merge from 'lodash.merge';\nimport pump from 'pump';\nconst modalDOMElementID = \"openlogin-modal\";\nconst storeKey = \"openlogin_store\";\nconst UX_MODE = {\n  POPUP: \"popup\",\n  REDIRECT: \"redirect\"\n};\nconst OPENLOGIN_METHOD = {\n  LOGIN: \"openlogin_login\",\n  LOGOUT: \"openlogin_logout\",\n  CHECK_3PC_SUPPORT: \"openlogin_check_3PC_support\",\n  SET_PID_DATA: \"openlogin_set_pid_data\",\n  GET_DATA: \"openlogin_get_data\"\n};\nconst ALLOWED_INTERACTIONS = {\n  POPUP: \"popup\",\n  REDIRECT: \"redirect\",\n  JRPC: \"jrpc\"\n};\nconst OPENLOGIN_NETWORK = {\n  MAINNET: \"mainnet\",\n  TESTNET: \"testnet\",\n  CYAN: \"cyan\",\n  DEVELOPMENT: \"development\"\n};\nconst LOGIN_PROVIDER = {\n  GOOGLE: \"google\",\n  FACEBOOK: \"facebook\",\n  REDDIT: \"reddit\",\n  DISCORD: \"discord\",\n  TWITCH: \"twitch\",\n  APPLE: \"apple\",\n  LINE: \"line\",\n  GITHUB: \"github\",\n  KAKAO: \"kakao\",\n  LINKEDIN: \"linkedin\",\n  TWITTER: \"twitter\",\n  WEIBO: \"weibo\",\n  WECHAT: \"wechat\",\n  EMAIL_PASSWORDLESS: \"email_passwordless\",\n  WEBAUTHN: \"webauthn\",\n  JWT: \"jwt\"\n};\nconst MFA_LEVELS = {\n  DEFAULT: \"default\",\n  OPTIONAL: \"optional\",\n  MANDATORY: \"mandatory\"\n};\nloglevel.setLevel(\"error\");\nvar log = loglevel.getLogger(\"openlogin\");\nasync function documentReady() {\n  return new Promise(resolve => {\n    if (document.readyState !== \"loading\") {\n      resolve();\n    } else {\n      document.addEventListener(\"DOMContentLoaded\", () => {\n        resolve();\n      });\n    }\n  });\n}\nconst htmlToElement = html => {\n  const template = window.document.createElement(\"template\");\n  const trimmedHtml = html.trim(); // Never return a text node of whitespace as the result\n\n  template.innerHTML = trimmedHtml;\n  return template.content.firstChild;\n};\nasync function whitelistUrl(clientId, appKey, origin) {\n  const appKeyBuf = Buffer.from(appKey.padStart(64, \"0\"), \"hex\");\n  if (base64url.encode(getPublic(appKeyBuf)) !== clientId) throw new Error(\"appKey mismatch\");\n  const sig = await sign(appKeyBuf, Buffer.from(keccak(\"keccak256\").update(origin).digest(\"hex\"), \"hex\"));\n  return base64url.encode(sig);\n}\nfunction getHashQueryParams() {\n  let replaceUrl = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : false;\n  const result = {};\n  const url = new URL(window.location.href);\n  url.searchParams.forEach((value, key) => {\n    if (key !== \"result\") {\n      result[key] = value;\n    }\n  });\n  const queryResult = url.searchParams.get(\"result\");\n  if (queryResult) {\n    try {\n      const queryParams = JSON.parse(safeatob(queryResult));\n      Object.keys(queryParams).forEach(key => {\n        result[key] = queryParams[key];\n      });\n    } catch (error) {\n      log.error(error);\n    }\n  }\n  const hash = url.hash.substring(1);\n  const hashUrl = new URL(\"\".concat(window.location.origin, \"/?\").concat(hash));\n  hashUrl.searchParams.forEach((value, key) => {\n    if (key !== \"result\") {\n      result[key] = value;\n    }\n  });\n  const hashResult = hashUrl.searchParams.get(\"result\");\n  if (hashResult) {\n    try {\n      const hashParams = JSON.parse(safeatob(hashResult));\n      Object.keys(hashParams).forEach(key => {\n        result[key] = hashParams[key];\n      });\n    } catch (error) {\n      log.error(error);\n    }\n  }\n  if (replaceUrl) {\n    const cleanUrl = window.location.origin + window.location.pathname;\n    window.history.replaceState(null, \"\", cleanUrl);\n  }\n  return result;\n}\nfunction awaitReq(id, windowRef) {\n  return new Promise((resolve, reject) => {\n    if (!windowRef) reject(new Error(\"Unable to open window\"));\n    let closedByHandler = false;\n    const closedMonitor = setInterval(() => {\n      if (!closedByHandler && windowRef.closed) {\n        clearInterval(closedMonitor);\n        reject(new Error(\"user closed popup\"));\n      }\n    }, 500);\n    const handler = ev => {\n      const {\n        pid\n      } = ev.data;\n      if (id !== pid) return;\n      window.removeEventListener(\"message\", handler);\n      closedByHandler = true;\n      clearInterval(closedMonitor);\n      windowRef.close();\n      if (ev.data.data && ev.data.data.error) {\n        reject(new Error(ev.data.data.error));\n      } else {\n        resolve(ev.data.data);\n      }\n    };\n    window.addEventListener(\"message\", handler);\n  });\n}\nfunction constructURL(params) {\n  const {\n    baseURL,\n    query,\n    hash\n  } = params;\n  const url = new URL(baseURL);\n  if (query) {\n    Object.keys(query).forEach(key => {\n      url.searchParams.append(key, query[key]);\n    });\n  }\n  if (hash) {\n    const h = new URL(constructURL({\n      baseURL,\n      query: hash\n    })).searchParams.toString();\n    url.hash = h;\n  }\n  return url.toString();\n}\nfunction storageAvailable(type) {\n  let storageExists = false;\n  let storageLength = 0;\n  let storage;\n  try {\n    storage = window[type];\n    storageExists = true;\n    storageLength = storage.length;\n    const x = \"__storage_test__\";\n    storage.setItem(x, x);\n    storage.removeItem(x);\n    return true;\n  } catch (error) {\n    return error && (\n    // everything except Firefox\n    error.code === 22 ||\n    // Firefox\n    error.code === 1014 ||\n    // test name field too, because code might not be present\n    // everything except Firefox\n    error.name === \"QuotaExceededErro r\" ||\n    // Firefox\n    error.name === \"NS_ERROR_DOM_QUOTA_REACHED\") &&\n    // acknowledge QuotaExceededError only if there's something already stored\n    storageExists && storageLength !== 0;\n  }\n}\nconst sessionStorageAvailable = storageAvailable(\"sessionStorage\");\nconst localStorageAvailable = storageAvailable(\"localStorage\");\nfunction preloadIframe(url) {\n  try {\n    if (typeof document === \"undefined\") return;\n    const openloginIframeHtml = document.createElement(\"link\");\n    openloginIframeHtml.href = url;\n    openloginIframeHtml.crossOrigin = \"anonymous\";\n    openloginIframeHtml.type = \"text/html\";\n    openloginIframeHtml.rel = \"prefetch\";\n    if (openloginIframeHtml.relList && openloginIframeHtml.relList.supports) {\n      if (openloginIframeHtml.relList.supports(\"prefetch\")) {\n        document.head.appendChild(openloginIframeHtml);\n      }\n    }\n  } catch (error) {\n    log.error(error);\n  }\n}\nfunction getPopupFeatures() {\n  // Fixes dual-screen position                             Most browsers      Firefox\n  const dualScreenLeft = window.screenLeft !== undefined ? window.screenLeft : window.screenX;\n  const dualScreenTop = window.screenTop !== undefined ? window.screenTop : window.screenY;\n  const w = 1200;\n  const h = 700;\n  const width = window.innerWidth ? window.innerWidth : document.documentElement.clientWidth ? document.documentElement.clientWidth : window.screen.width;\n  const height = window.innerHeight ? window.innerHeight : document.documentElement.clientHeight ? document.documentElement.clientHeight : window.screen.height;\n  const systemZoom = 1; // No reliable estimate\n\n  const left = Math.abs((width - w) / 2 / systemZoom + dualScreenLeft);\n  const top = Math.abs((height - h) / 2 / systemZoom + dualScreenTop);\n  const features = \"titlebar=0,toolbar=0,status=0,location=0,menubar=0,height=\".concat(h / systemZoom, \",width=\").concat(w / systemZoom, \",top=\").concat(top, \",left=\").concat(left);\n  return features;\n}\nconst handleStream = (handle, eventName, handler) => {\n  const handlerWrapper = chunk => {\n    handler(chunk);\n    handle.removeListener(eventName, handlerWrapper);\n  };\n  handle.on(eventName, handlerWrapper);\n};\nclass Modal {\n  constructor(modalUrl) {\n    _defineProperty(this, \"modalUrl\", void 0);\n    _defineProperty(this, \"iframeElem\", void 0);\n    _defineProperty(this, \"initialized\", false);\n    _defineProperty(this, \"modalZIndex\", 99999);\n    _defineProperty(this, \"mux\", void 0);\n    _defineProperty(this, \"verifierStream\", void 0);\n    this.modalUrl = modalUrl;\n  }\n  async init() {\n    await this.initIFrame(this.modalUrl);\n    this.setupStream();\n  }\n  setupStream() {\n    if (this.iframeElem === null) throw new Error(\"iframe is null\");\n    this.mux = setupMultiplex(new PostMessageStream({\n      name: \"modal_iframe_rpc\",\n      target: \"modal_rpc\",\n      targetWindow: this.iframeElem.contentWindow,\n      targetOrigin: new URL(this.modalUrl).origin\n    }));\n    this.verifierStream = this.mux.createStream(\"verifier\");\n  }\n  async initIFrame(src) {\n    await documentReady();\n    const documentIFrameElem = document.getElementById(modalDOMElementID);\n    if (documentIFrameElem) {\n      documentIFrameElem.remove();\n      log.info(\"already initialized, removing previous modal iframe\");\n    }\n    this.iframeElem = htmlToElement(\"<iframe\\n        id=\".concat(modalDOMElementID, \"\\n        class=\\\"torusIframe\\\"\\n        src=\\\"\").concat(src, \"\\\"\\n        style=\\\"display: none; position: fixed; top: 0; right: 0; width: 100%;\\n        height: 100%; border: none; border-radius: 0; z-index: \").concat(this.modalZIndex.toString(), \"\\\"\\n      ></iframe>\"));\n    this._hideModal();\n    document.body.appendChild(this.iframeElem);\n    return new Promise(resolve => {\n      this.iframeElem.onload = () => {\n        this.initialized = true;\n        resolve();\n      };\n    });\n  }\n  _showModal() {\n    const style = {};\n    style.display = \"block\";\n    style.position = \"fixed\";\n    style.width = \"100%\";\n    style.height = \"100%\";\n    style.top = \"0px\";\n    style.right = \"0px\";\n    style.left = \"0px\";\n    style.bottom = \"0px\";\n    style.border = \"0\";\n    style[\"z-index\"] = this.modalZIndex;\n    this.iframeElem.setAttribute(\"style\", Object.entries(style).map(_ref => {\n      let [k, v] = _ref;\n      return \"\".concat(k, \":\").concat(v);\n    }).join(\";\"));\n  }\n  _hideModal() {\n    const style = {};\n    style.display = \"none\";\n    style.position = \"fixed\";\n    style.width = \"100%\";\n    style.height = \"100%\";\n    style.top = \"0px\";\n    style.right = \"0px\";\n    style.left = \"0px\";\n    style.bottom = \"0px\";\n    style.border = \"0\";\n    style[\"z-index\"] = this.modalZIndex;\n    this.iframeElem.setAttribute(\"style\", Object.entries(style).map(_ref2 => {\n      let [k, v] = _ref2;\n      return \"\".concat(k, \":\").concat(v);\n    }).join(\";\"));\n  }\n  async _prompt(clientId, whiteLabel, loginConfig, cb) {\n    this._showModal();\n    const modalHandler = chunk => {\n      this._hideModal();\n      cb(chunk);\n    };\n    handleStream(this.verifierStream, \"data\", modalHandler);\n    this.verifierStream.write({\n      name: \"prompt\",\n      clientId,\n      whiteLabel,\n      loginConfig\n    });\n  }\n  async cleanup() {\n    await documentReady();\n    const documentIFrameElem = document.getElementById(modalDOMElementID);\n    if (documentIFrameElem) {\n      documentIFrameElem.remove();\n      this.iframeElem = null;\n    }\n    this.initialized = false;\n  }\n}\nclass MemoryStore {\n  constructor() {\n    _defineProperty(this, \"store\", {});\n  }\n  getItem(key) {\n    return this.store[key];\n  }\n  setItem(key, value) {\n    this.store[key] = value;\n  }\n}\nclass OpenLoginStore {\n  // eslint-disable-next-line no-use-before-define\n  constructor(storage) {\n    _defineProperty(this, \"storage\", void 0);\n    this.storage = storage;\n    try {\n      if (!storage.getItem(storeKey)) {\n        this.resetStore();\n      }\n    } catch (error) {// Storage is not available\n    }\n  }\n  static getInstance() {\n    if (!this.instance) {\n      this.instance = new this(localStorageAvailable ? localStorage : new MemoryStore());\n    }\n    return this.instance;\n  }\n  toJSON() {\n    return this.storage.getItem(storeKey);\n  }\n  resetStore() {\n    const currStore = this.getStore();\n    this.storage.setItem(storeKey, JSON.stringify({}));\n    return currStore;\n  }\n  getStore() {\n    return JSON.parse(this.storage.getItem(storeKey));\n  }\n  get(key) {\n    const store = JSON.parse(this.storage.getItem(storeKey));\n    return store[key];\n  }\n  set(key, value) {\n    const store = JSON.parse(this.storage.getItem(storeKey));\n    store[key] = value;\n    this.storage.setItem(storeKey, JSON.stringify(store));\n  }\n}\n_defineProperty(OpenLoginStore, \"instance\", void 0);\nclass Provider extends SafeEventEmitter {\n  constructor() {\n    super(...arguments);\n    _defineProperty(this, \"iframeElem\", null);\n    _defineProperty(this, \"rpcStream\", void 0);\n    _defineProperty(this, \"iframeUrl\", void 0);\n    _defineProperty(this, \"rpcEngine\", void 0);\n    _defineProperty(this, \"initialized\", void 0);\n    _defineProperty(this, \"mux\", void 0);\n  }\n  init(_ref) {\n    let {\n      iframeElem,\n      iframeUrl\n    } = _ref;\n    this.iframeElem = iframeElem;\n    this.iframeUrl = iframeUrl;\n    this.setupStream();\n    this.initialized = true;\n  }\n  setupStream() {\n    if (this.iframeElem === null) throw new Error(\"iframe is null\");\n    this.rpcStream = new PostMessageStream({\n      name: \"embed_rpc\",\n      target: \"iframe_rpc\",\n      targetWindow: this.iframeElem.contentWindow,\n      targetOrigin: new URL(this.iframeUrl).origin\n    });\n    this.mux = setupMultiplex(this.rpcStream);\n    const JRPCConnection = createStreamMiddleware();\n    pump(JRPCConnection.stream, this.mux.createStream(\"jrpc\"), JRPCConnection.stream, error => {\n      log.error(\"JRPC connection broken\", error);\n    });\n    const rpcEngine = new JRPCEngine();\n    rpcEngine.push(createIdRemapMiddleware());\n    rpcEngine.push(JRPCConnection.middleware);\n    this.rpcEngine = rpcEngine;\n  }\n  cleanup() {\n    this.iframeElem = null;\n    this.initialized = false;\n  }\n  _rpcRequest(payload, callback) {\n    if (!payload.jsonrpc) {\n      payload.jsonrpc = \"2.0\";\n    }\n    if (!payload.id) {\n      payload.id = randomId();\n    }\n    this.rpcEngine.handle(payload, callback);\n  }\n}\nfunction ownKeys(object, enumerableOnly) {\n  var keys = Object.keys(object);\n  if (Object.getOwnPropertySymbols) {\n    var symbols = Object.getOwnPropertySymbols(object);\n    enumerableOnly && (symbols = symbols.filter(function (sym) {\n      return Object.getOwnPropertyDescriptor(object, sym).enumerable;\n    })), keys.push.apply(keys, symbols);\n  }\n  return keys;\n}\nfunction _objectSpread(target) {\n  for (var i = 1; i < arguments.length; i++) {\n    var source = null != arguments[i] ? arguments[i] : {};\n    i % 2 ? ownKeys(Object(source), !0).forEach(function (key) {\n      _defineProperty(target, key, source[key]);\n    }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)) : ownKeys(Object(source)).forEach(function (key) {\n      Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key));\n    });\n  }\n  return target;\n}\npreloadIframe(\"https://app.openlogin.com/sdk-modal\");\nclass OpenLogin {\n  constructor(options) {\n    var _options$no3PC, _options$_startUrl, _options$_popupUrl, _options$redirectUrl, _options$uxMode, _options$replaceUrlOn, _options$originData, _options$whiteLabel, _options$loginConfig;\n    _defineProperty(this, \"provider\", void 0);\n    _defineProperty(this, \"state\", void 0);\n    _defineProperty(this, \"modal\", void 0);\n    this.provider = new Proxy(new Provider(), {\n      deleteProperty: () => true // work around for web3\n    });\n\n    if (!options._iframeUrl) {\n      if (options.network === OPENLOGIN_NETWORK.MAINNET) {\n        options._iframeUrl = \"https://app.openlogin.com\";\n      } else if (options.network === OPENLOGIN_NETWORK.CYAN) {\n        options._iframeUrl = \"https://cyan.openlogin.com\";\n      } else if (options.network === OPENLOGIN_NETWORK.TESTNET) {\n        options._iframeUrl = \"https://beta.openlogin.com\";\n      } else if (options.network === OPENLOGIN_NETWORK.DEVELOPMENT) {\n        options._iframeUrl = \"http://localhost:3000\";\n      }\n    }\n    if (!options._iframeUrl) {\n      throw new Error(\"unspecified network and iframeUrl\");\n    }\n    this.modal = new Modal(\"\".concat(options._iframeUrl, \"/sdk-modal\"));\n    this.initState(_objectSpread(_objectSpread({}, options), {}, {\n      no3PC: (_options$no3PC = options.no3PC) !== null && _options$no3PC !== void 0 ? _options$no3PC : false,\n      _iframeUrl: options._iframeUrl,\n      _startUrl: (_options$_startUrl = options._startUrl) !== null && _options$_startUrl !== void 0 ? _options$_startUrl : \"\".concat(options._iframeUrl, \"/start\"),\n      _popupUrl: (_options$_popupUrl = options._popupUrl) !== null && _options$_popupUrl !== void 0 ? _options$_popupUrl : \"\".concat(options._iframeUrl, \"/popup-window\"),\n      redirectUrl: (_options$redirectUrl = options.redirectUrl) !== null && _options$redirectUrl !== void 0 ? _options$redirectUrl : \"\".concat(window.location.protocol, \"//\").concat(window.location.host).concat(window.location.pathname),\n      uxMode: (_options$uxMode = options.uxMode) !== null && _options$uxMode !== void 0 ? _options$uxMode : UX_MODE.REDIRECT,\n      replaceUrlOnRedirect: (_options$replaceUrlOn = options.replaceUrlOnRedirect) !== null && _options$replaceUrlOn !== void 0 ? _options$replaceUrlOn : true,\n      originData: (_options$originData = options.originData) !== null && _options$originData !== void 0 ? _options$originData : {\n        [window.location.origin]: \"\"\n      },\n      whiteLabel: (_options$whiteLabel = options.whiteLabel) !== null && _options$whiteLabel !== void 0 ? _options$whiteLabel : {},\n      loginConfig: (_options$loginConfig = options.loginConfig) !== null && _options$loginConfig !== void 0 ? _options$loginConfig : {}\n    }));\n  }\n  get privKey() {\n    return this.state.privKey ? this.state.privKey.padStart(64, \"0\") : \"\";\n  }\n  initState(options) {\n    this.state = {\n      uxMode: options.uxMode,\n      network: options.network,\n      store: OpenLoginStore.getInstance(),\n      iframeUrl: options._iframeUrl,\n      startUrl: options._startUrl,\n      popupUrl: options._popupUrl,\n      clientId: options.clientId,\n      redirectUrl: options.redirectUrl,\n      replaceUrlOnRedirect: options.replaceUrlOnRedirect,\n      originData: options.originData,\n      loginConfig: options.loginConfig,\n      support3PC: !options.no3PC,\n      whiteLabel: options.whiteLabel\n    };\n  }\n  async init() {\n    if (this.state.support3PC) {\n      await Promise.all([this.modal.init(), this.updateOriginData()]);\n      this.provider.init({\n        iframeElem: this.modal.iframeElem,\n        iframeUrl: this.state.iframeUrl\n      });\n      this._syncState(getHashQueryParams(this.state.replaceUrlOnRedirect));\n      const res = await this._check3PCSupport();\n      this.state.support3PC = !!res.support3PC;\n      if (this.state.support3PC) {\n        this._syncState(await this._getData());\n      }\n    } else {\n      await this.updateOriginData();\n      this._syncState(getHashQueryParams(this.state.replaceUrlOnRedirect));\n    }\n  }\n  async updateOriginData() {\n    const filteredOriginData = JSON.parse(JSON.stringify(this.state.originData));\n    Object.keys(filteredOriginData).forEach(key => {\n      if (filteredOriginData[key] === \"\") delete filteredOriginData[key];\n    });\n    const [whitelist, whiteLabel] = await Promise.all([this.getWhitelist(), this.getWhiteLabel()]);\n    this._syncState({\n      originData: _objectSpread(_objectSpread({}, whitelist), filteredOriginData),\n      whiteLabel: _objectSpread(_objectSpread({}, whiteLabel), this.state.whiteLabel)\n    });\n  }\n  async getWhitelist() {\n    try {\n      const {\n        clientId\n      } = this.state;\n      if (!clientId) {\n        throw new Error(\"unspecified clientId\");\n      }\n      const url = new URL(\"https://api.developer.tor.us/whitelist\");\n      url.searchParams.append(\"project_id\", this.state.clientId);\n      const res = await get(url.href);\n      return res.signed_urls;\n    } catch (_) {\n      // fail silently\n      return {};\n    }\n  }\n  async getWhiteLabel() {\n    try {\n      const {\n        clientId\n      } = this.state;\n      if (!clientId) {\n        throw new Error(\"unspecified clientId\");\n      }\n      const url = new URL(\"https://api.developer.tor.us/whitelabel\");\n      url.searchParams.append(\"project_id\", this.state.clientId);\n      const res = await get(url.href);\n      return res.whiteLabel;\n    } catch (_) {\n      // fail silently\n      return {};\n    }\n  }\n  async _fastLogin(params) {\n    const defaultParams = {\n      redirectUrl: this.state.redirectUrl\n    };\n    const loginParams = _objectSpread(_objectSpread({}, defaultParams), params);\n    const res = await this.request({\n      params: [_objectSpread(_objectSpread({}, loginParams), {}, {\n        fastLogin: true\n      })],\n      method: OPENLOGIN_METHOD.LOGIN,\n      startUrl: this.state.startUrl,\n      popupUrl: this.state.popupUrl,\n      allowedInteractions: [ALLOWED_INTERACTIONS.POPUP, ALLOWED_INTERACTIONS.REDIRECT]\n    });\n    this.state.privKey = res.privKey;\n    return res;\n  }\n  async login(params) {\n    if (params !== null && params !== void 0 && params.loginProvider) {\n      return this._selectedLogin(params);\n    }\n    return this._modal(params);\n  }\n  async _selectedLogin(params) {\n    const defaultParams = {\n      redirectUrl: this.state.redirectUrl\n    };\n    const loginParams = _objectSpread(_objectSpread({\n      loginProvider: params.loginProvider\n    }, defaultParams), params); // fast login flow\n    // if (this.state.store.get(\"touchIDPreference\") === \"enabled\" && !loginParams.extraLoginOptions?.login_hint) {\n    //   return this._fastLogin(loginParams);\n    // }\n\n    const res = await this.request({\n      method: OPENLOGIN_METHOD.LOGIN,\n      allowedInteractions: [UX_MODE.REDIRECT, UX_MODE.POPUP],\n      startUrl: this.state.startUrl,\n      popupUrl: this.state.popupUrl,\n      params: [loginParams]\n    });\n    this.state.privKey = res.privKey;\n    if (res.store) {\n      this._syncState(res);\n    } else if (this.state.privKey && this.state.support3PC) {\n      this._syncState(await this._getData());\n    }\n    return {\n      privKey: this.privKey\n    };\n  }\n  async logout() {\n    let logoutParams = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n    const params = {}; // defaults\n\n    params.redirectUrl = this.state.redirectUrl;\n    params._clientId = this.state.clientId;\n    if (logoutParams.clientId) {\n      params._clientId = logoutParams.clientId;\n    }\n    if (logoutParams.fastLogin !== undefined) {\n      params.fastLogin = logoutParams.fastLogin;\n    }\n    if (logoutParams.redirectUrl !== undefined) {\n      params.redirectUrl = logoutParams.redirectUrl;\n    }\n    const res = await this.request({\n      method: OPENLOGIN_METHOD.LOGOUT,\n      params: [params],\n      startUrl: this.state.startUrl,\n      popupUrl: this.state.popupUrl,\n      allowedInteractions: [ALLOWED_INTERACTIONS.JRPC, ALLOWED_INTERACTIONS.POPUP, ALLOWED_INTERACTIONS.REDIRECT]\n    });\n    this.state.privKey = \"\"; // if (!params.fastLogin) this.state.store.set(\"touchIDPreference\", \"disabled\");\n\n    return res;\n  }\n  async request(args) {\n    var _params$0$redirectUrl;\n    const pid = randomId();\n    let {\n      params\n    } = args; // Note: _origin is added later in postMessageStream for jrpc requests\n    // do not add it here since its used for checking postMessage constraints\n\n    const session = {};\n    if (params.length !== 1) throw new Error(\"request params array should have only one element\");\n    const {\n      startUrl,\n      popupUrl,\n      method,\n      allowedInteractions\n    } = args;\n    if (allowedInteractions.length === 0) throw new Error(\"no allowed interactions\");\n    if (this.state.clientId) {\n      session._clientId = this.state.clientId;\n    }\n    if (this.privKey) {\n      const userData = {\n        clientId: session._clientId,\n        timestamp: Date.now().toString()\n      };\n      const sig = await sign(Buffer.from(this.privKey, \"hex\"), Buffer.from(keccak(\"keccak256\").update(JSON.stringify(userData)).digest(\"hex\"), \"hex\"));\n      session._user = getPublic(Buffer.from(this.privKey, \"hex\")).toString(\"hex\");\n      session._userSig = base64url.encode(sig);\n      session._userData = userData;\n    }\n    session._originData = this.state.originData;\n    session._whiteLabelData = this.state.whiteLabel;\n    session._loginConfig = this.state.loginConfig; // add in session data (allow overrides)\n\n    params = [_objectSpread(_objectSpread({}, session), params[0])]; // use JRPC where possible\n\n    if (this.state.support3PC && allowedInteractions.includes(ALLOWED_INTERACTIONS.JRPC)) {\n      return this._jrpcRequest({\n        method,\n        params\n      });\n    } // set origin\n\n    params[0]._origin = new URL((_params$0$redirectUrl = params[0].redirectUrl) !== null && _params$0$redirectUrl !== void 0 ? _params$0$redirectUrl : this.state.redirectUrl).origin; // preset params\n\n    if (this.state.support3PC) {\n      // set params first if 3PC supported\n      await this._setPIDData(pid, params); // eslint-disable-next-line require-atomic-updates\n\n      params = [{}];\n    }\n    if (!startUrl || !popupUrl) {\n      throw new Error(\"no url for redirect / popup flow\");\n    } // method and pid are always in URL hash params\n    // convert params from JSON to base64\n\n    if (this.state.uxMode === UX_MODE.REDIRECT) {\n      // if redirects preferred, check for redirect flows first, then check for popup flow\n      if (allowedInteractions.includes(ALLOWED_INTERACTIONS.REDIRECT)) {\n        // give time for synchronous methods to complete before redirect\n        setTimeout(() => {\n          window.location.href = constructURL({\n            baseURL: startUrl,\n            hash: {\n              b64Params: jsonToBase64(params[0]),\n              _pid: pid,\n              _method: method\n            }\n          });\n        }, 50);\n        return {};\n      }\n      if (allowedInteractions.includes(ALLOWED_INTERACTIONS.POPUP)) {\n        const u = new URL(constructURL({\n          baseURL: popupUrl,\n          hash: {\n            b64Params: jsonToBase64(params[0]),\n            _pid: pid,\n            _method: method\n          }\n        }));\n        const windowRef = window.open(u.toString(), \"_blank\", getPopupFeatures());\n        return awaitReq(pid, windowRef);\n      }\n    } else {\n      // if popups preferred, check for popup flows first, then check for redirect flow\n      if (allowedInteractions.includes(ALLOWED_INTERACTIONS.POPUP)) {\n        const u = new URL(constructURL({\n          baseURL: popupUrl,\n          hash: {\n            b64Params: jsonToBase64(params[0]),\n            _pid: pid,\n            _method: method\n          }\n        }));\n        const windowRef = window.open(u.toString(), \"_blank\", getPopupFeatures());\n        return awaitReq(pid, windowRef);\n      }\n      if (allowedInteractions.includes(ALLOWED_INTERACTIONS.REDIRECT)) {\n        // give time for synchronous methods to complete before redirect\n        setTimeout(() => {\n          window.location.href = constructURL({\n            baseURL: startUrl,\n            hash: {\n              b64Params: jsonToBase64(params[0]),\n              _pid: pid,\n              _method: method\n            }\n          });\n        }, 50);\n        return null;\n      }\n    }\n    throw new Error(\"no matching allowed interactions\");\n  }\n  async _jrpcRequest(args) {\n    // await this.initialized;\n    if (!args || typeof args !== \"object\" || Array.isArray(args)) {\n      throw new Error(\"invalid request args\");\n    }\n    const {\n      method,\n      params\n    } = args;\n    if (typeof method !== \"string\" || method.length === 0) {\n      throw new Error(\"invalid request method\");\n    }\n    if (params === undefined || !Array.isArray(params)) {\n      throw new Error(\"invalid request params\");\n    }\n    if (params.length === 0) {\n      params.push({});\n    }\n    return new Promise((resolve, reject) => {\n      this.provider._rpcRequest({\n        method,\n        params\n      }, getRpcPromiseCallback(resolve, reject));\n    });\n  }\n  async _check3PCSupport() {\n    return this._jrpcRequest({\n      method: OPENLOGIN_METHOD.CHECK_3PC_SUPPORT,\n      params: [{\n        _originData: this.state.originData\n      }]\n    });\n  }\n  async _setPIDData(pid, data) {\n    await this.request({\n      allowedInteractions: [ALLOWED_INTERACTIONS.JRPC],\n      method: OPENLOGIN_METHOD.SET_PID_DATA,\n      params: [{\n        pid,\n        data: data[0]\n      }]\n    });\n  }\n  async _getData() {\n    return this.request({\n      allowedInteractions: [ALLOWED_INTERACTIONS.JRPC],\n      method: OPENLOGIN_METHOD.GET_DATA,\n      params: [{}]\n    });\n  }\n  _syncState(newState) {\n    if (newState.store) {\n      if (typeof newState.store !== \"object\") {\n        throw new Error(\"expected store to be an object\");\n      }\n      Object.keys(newState.store).forEach(key => {\n        // if privKey is available then user is not logged out, but in popup mode store info is not available.\n        // so we don't want to overwrite the local store if privKey is available\n        // and if latest iframe store data is not available\n        if (newState.privKey) {\n          if (newState.store[key]) {\n            this.state.store.set(key, newState.store[key]);\n          }\n        } else {\n          this.state.store.set(key, newState.store[key]);\n        }\n      });\n    }\n    const {\n      store\n    } = this.state;\n    this.state = _objectSpread(_objectSpread(_objectSpread({}, this.state), newState), {}, {\n      store\n    });\n  }\n  async _modal(params) {\n    return new Promise((resolve, reject) => {\n      this.modal._prompt(this.state.clientId, this.state.whiteLabel, this.state.loginConfig, async chunk => {\n        if (chunk.cancel) {\n          reject(new Error(\"user canceled login\"));\n        } else {\n          try {\n            const selectedLoginResponse = await this._selectedLogin(merge(params, chunk));\n            resolve(selectedLoginResponse);\n          } catch (error) {\n            reject(error);\n          }\n        }\n      });\n    });\n  }\n  async _cleanup() {\n    await this.modal.cleanup();\n    this.provider.cleanup();\n  }\n  async encrypt(message, privateKey) {\n    let privKey = privateKey;\n    if (!privKey) {\n      privKey = this.privKey;\n    } // validations\n\n    if (!/^[0-9a-fA-f]{64}$/.exec(privKey)) {\n      if (privKey === \"\" || privKey === undefined) {\n        throw new Error(\"private key cannot be empty\");\n      } else {\n        throw new Error(\"invalid private key in encrypt\");\n      }\n    }\n    return encrypt(getPublic(Buffer.from(privKey, \"hex\")), message);\n  }\n  async decrypt(ciphertext, privateKey) {\n    let privKey = privateKey;\n    if (!privKey) {\n      privKey = this.privKey;\n    } // validations\n\n    if (!/^[0-9a-fA-f]{64}$/.exec(privKey)) {\n      if (privKey === \"\" || privKey === undefined) {\n        throw new Error(\"private key cannot be empty\");\n      } else {\n        throw new Error(\"invalid private key in decrypt\");\n      }\n    }\n    return decrypt(Buffer.from(privKey, \"hex\"), ciphertext);\n  }\n  async getUserInfo() {\n    if (this.privKey) {\n      const storeData = this.state.store.getStore();\n      const userInfo = {\n        email: storeData.email || \"\",\n        name: storeData.name || \"\",\n        profileImage: storeData.profileImage || \"\",\n        aggregateVerifier: storeData.aggregateVerifier || \"\",\n        verifier: storeData.verifier || \"\",\n        verifierId: storeData.verifierId || \"\",\n        typeOfLogin: storeData.typeOfLogin || \"\",\n        dappShare: storeData.dappShare || \"\"\n      };\n      return userInfo;\n    }\n    throw new Error(\"user should be logged in to fetch userInfo\");\n  }\n  async getEncodedLoginUrl(loginParams) {\n    const {\n      redirectUrl\n    } = loginParams;\n    const {\n      clientId\n    } = this.state;\n    if (!this.state.originData[origin]) {\n      await this.updateOriginData();\n    }\n    const dataObject = _objectSpread({\n      _clientId: clientId,\n      _origin: new URL(redirectUrl).origin,\n      _originData: this.state.originData,\n      redirectUrl\n    }, loginParams);\n    const b64Params = jsonToBase64(dataObject);\n    const hashParams = {\n      b64Params,\n      _method: \"openlogin_login\"\n    };\n    return constructURL({\n      baseURL: \"\".concat(this.state.iframeUrl, \"/start\"),\n      hash: hashParams\n    });\n  }\n}\nexport { ALLOWED_INTERACTIONS, LOGIN_PROVIDER, MFA_LEVELS, OPENLOGIN_METHOD, OPENLOGIN_NETWORK, OpenLoginStore, Provider, UX_MODE, awaitReq, constructURL, OpenLogin as default, documentReady, getHashQueryParams, getPopupFeatures, htmlToElement, localStorageAvailable, log as loglevel, modalDOMElementID, preloadIframe, sessionStorageAvailable, storageAvailable, storeKey, whitelistUrl };","map":{"version":3,"sources":["../src/constants.ts","../src/loglevel.ts","../src/utils.ts","../src/Modal.ts","../src/MemoryStore.ts","../src/OpenLoginStore.ts","../src/Provider.ts","../src/OpenLogin.ts"],"names":["modalDOMElementID","storeKey","UX_MODE","POPUP","REDIRECT","OPENLOGIN_METHOD","LOGIN","LOGOUT","CHECK_3PC_SUPPORT","SET_PID_DATA","GET_DATA","ALLOWED_INTERACTIONS","JRPC","OPENLOGIN_NETWORK","MAINNET","TESTNET","CYAN","DEVELOPMENT","LOGIN_PROVIDER","GOOGLE","FACEBOOK","REDDIT","DISCORD","TWITCH","APPLE","LINE","GITHUB","KAKAO","LINKEDIN","TWITTER","WEIBO","WECHAT","EMAIL_PASSWORDLESS","WEBAUTHN","JWT","MFA_LEVELS","DEFAULT","OPTIONAL","MANDATORY","loglevel","setLevel","getLogger","documentReady","Promise","resolve","document","readyState","addEventListener","htmlToElement","html","template","window","createElement","trimmedHtml","trim","innerHTML","content","firstChild","whitelistUrl","clientId","appKey","origin","appKeyBuf","Buffer","from","padStart","base64url","encode","getPublic","Error","sig","sign","keccak","update","digest","getHashQueryParams","replaceUrl","result","url","URL","location","href","searchParams","forEach","value","key","queryResult","get","queryParams","JSON","parse","safeatob","Object","keys","error","log","hash","substring","hashUrl","hashResult","hashParams","cleanUrl","pathname","history","replaceState","awaitReq","id","windowRef","reject","closedByHandler","closedMonitor","setInterval","closed","clearInterval","handler","ev","pid","data","removeEventListener","close","constructURL","params","baseURL","query","append","h","toString","storageAvailable","type","storageExists","storageLength","storage","length","x","setItem","removeItem","code","name","sessionStorageAvailable","localStorageAvailable","preloadIframe","openloginIframeHtml","crossOrigin","rel","relList","supports","head","appendChild","getPopupFeatures","dualScreenLeft","screenLeft","undefined","screenX","dualScreenTop","screenTop","screenY","w","width","innerWidth","documentElement","clientWidth","screen","height","innerHeight","clientHeight","systemZoom","left","Math","abs","top","features","handleStream","handle","eventName","handlerWrapper","chunk","removeListener","on","Modal","constructor","modalUrl","init","initIFrame","setupStream","iframeElem","mux","setupMultiplex","PostMessageStream","target","targetWindow","contentWindow","targetOrigin","verifierStream","createStream","src","documentIFrameElem","getElementById","remove","info","modalZIndex","_hideModal","body","onload","initialized","_showModal","style","display","position","right","bottom","border","setAttribute","entries","map","k","v","join","_prompt","whiteLabel","loginConfig","cb","modalHandler","write","cleanup","MemoryStore","getItem","store","OpenLoginStore","resetStore","getInstance","instance","localStorage","toJSON","currStore","getStore","stringify","set","Provider","SafeEventEmitter","iframeUrl","rpcStream","JRPCConnection","createStreamMiddleware","pump","stream","rpcEngine","JRPCEngine","push","createIdRemapMiddleware","middleware","_rpcRequest","payload","callback","jsonrpc","randomId","OpenLogin","options","provider","Proxy","deleteProperty","_iframeUrl","network","modal","initState","no3PC","_startUrl","_popupUrl","redirectUrl","protocol","host","uxMode","replaceUrlOnRedirect","originData","privKey","state","startUrl","popupUrl","support3PC","all","updateOriginData","_syncState","res","_check3PCSupport","_getData","filteredOriginData","whitelist","getWhitelist","getWhiteLabel","signed_urls","_","_fastLogin","defaultParams","loginParams","request","fastLogin","method","allowedInteractions","login","loginProvider","_selectedLogin","_modal","logout","logoutParams","_clientId","args","session","userData","timestamp","Date","now","_user","_userSig","_userData","_originData","_whiteLabelData","_loginConfig","includes","_jrpcRequest","_origin","_setPIDData","setTimeout","b64Params","jsonToBase64","_pid","_method","u","open","Array","isArray","getRpcPromiseCallback","newState","cancel","selectedLoginResponse","merge","_cleanup","encrypt","message","privateKey","exec","decrypt","ciphertext","getUserInfo","storeData","userInfo","email","profileImage","aggregateVerifier","verifier","verifierId","typeOfLogin","dappShare","getEncodedLoginUrl","dataObject"],"mappings":"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","sourcesContent":["import loglevel from 'loglevel';\nimport _defineProperty from '@babel/runtime/helpers/defineProperty';\nimport { getPublic, sign, encrypt, decrypt } from '@toruslabs/eccrypto';\nimport { get } from '@toruslabs/http-helpers';\nimport { setupMultiplex, PostMessageStream, SafeEventEmitter, createStreamMiddleware, JRPCEngine, createIdRemapMiddleware, getRpcPromiseCallback } from '@toruslabs/openlogin-jrpc';\nimport { base64url, keccak, safeatob, randomId, jsonToBase64 } from '@toruslabs/openlogin-utils';\nimport merge from 'lodash.merge';\nimport pump from 'pump';\n\nconst modalDOMElementID = \"openlogin-modal\";\nconst storeKey = \"openlogin_store\";\nconst UX_MODE = {\n  POPUP: \"popup\",\n  REDIRECT: \"redirect\"\n};\nconst OPENLOGIN_METHOD = {\n  LOGIN: \"openlogin_login\",\n  LOGOUT: \"openlogin_logout\",\n  CHECK_3PC_SUPPORT: \"openlogin_check_3PC_support\",\n  SET_PID_DATA: \"openlogin_set_pid_data\",\n  GET_DATA: \"openlogin_get_data\"\n};\nconst ALLOWED_INTERACTIONS = {\n  POPUP: \"popup\",\n  REDIRECT: \"redirect\",\n  JRPC: \"jrpc\"\n};\nconst OPENLOGIN_NETWORK = {\n  MAINNET: \"mainnet\",\n  TESTNET: \"testnet\",\n  CYAN: \"cyan\",\n  DEVELOPMENT: \"development\"\n};\nconst LOGIN_PROVIDER = {\n  GOOGLE: \"google\",\n  FACEBOOK: \"facebook\",\n  REDDIT: \"reddit\",\n  DISCORD: \"discord\",\n  TWITCH: \"twitch\",\n  APPLE: \"apple\",\n  LINE: \"line\",\n  GITHUB: \"github\",\n  KAKAO: \"kakao\",\n  LINKEDIN: \"linkedin\",\n  TWITTER: \"twitter\",\n  WEIBO: \"weibo\",\n  WECHAT: \"wechat\",\n  EMAIL_PASSWORDLESS: \"email_passwordless\",\n  WEBAUTHN: \"webauthn\",\n  JWT: \"jwt\"\n};\nconst MFA_LEVELS = {\n  DEFAULT: \"default\",\n  OPTIONAL: \"optional\",\n  MANDATORY: \"mandatory\"\n};\n\nloglevel.setLevel(\"error\");\nvar log = loglevel.getLogger(\"openlogin\");\n\nasync function documentReady() {\n  return new Promise(resolve => {\n    if (document.readyState !== \"loading\") {\n      resolve();\n    } else {\n      document.addEventListener(\"DOMContentLoaded\", () => {\n        resolve();\n      });\n    }\n  });\n}\nconst htmlToElement = html => {\n  const template = window.document.createElement(\"template\");\n  const trimmedHtml = html.trim(); // Never return a text node of whitespace as the result\n\n  template.innerHTML = trimmedHtml;\n  return template.content.firstChild;\n};\nasync function whitelistUrl(clientId, appKey, origin) {\n  const appKeyBuf = Buffer.from(appKey.padStart(64, \"0\"), \"hex\");\n  if (base64url.encode(getPublic(appKeyBuf)) !== clientId) throw new Error(\"appKey mismatch\");\n  const sig = await sign(appKeyBuf, Buffer.from(keccak(\"keccak256\").update(origin).digest(\"hex\"), \"hex\"));\n  return base64url.encode(sig);\n}\nfunction getHashQueryParams() {\n  let replaceUrl = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : false;\n  const result = {};\n  const url = new URL(window.location.href);\n  url.searchParams.forEach((value, key) => {\n    if (key !== \"result\") {\n      result[key] = value;\n    }\n  });\n  const queryResult = url.searchParams.get(\"result\");\n\n  if (queryResult) {\n    try {\n      const queryParams = JSON.parse(safeatob(queryResult));\n      Object.keys(queryParams).forEach(key => {\n        result[key] = queryParams[key];\n      });\n    } catch (error) {\n      log.error(error);\n    }\n  }\n\n  const hash = url.hash.substring(1);\n  const hashUrl = new URL(\"\".concat(window.location.origin, \"/?\").concat(hash));\n  hashUrl.searchParams.forEach((value, key) => {\n    if (key !== \"result\") {\n      result[key] = value;\n    }\n  });\n  const hashResult = hashUrl.searchParams.get(\"result\");\n\n  if (hashResult) {\n    try {\n      const hashParams = JSON.parse(safeatob(hashResult));\n      Object.keys(hashParams).forEach(key => {\n        result[key] = hashParams[key];\n      });\n    } catch (error) {\n      log.error(error);\n    }\n  }\n\n  if (replaceUrl) {\n    const cleanUrl = window.location.origin + window.location.pathname;\n    window.history.replaceState(null, \"\", cleanUrl);\n  }\n\n  return result;\n}\nfunction awaitReq(id, windowRef) {\n  return new Promise((resolve, reject) => {\n    if (!windowRef) reject(new Error(\"Unable to open window\"));\n    let closedByHandler = false;\n    const closedMonitor = setInterval(() => {\n      if (!closedByHandler && windowRef.closed) {\n        clearInterval(closedMonitor);\n        reject(new Error(\"user closed popup\"));\n      }\n    }, 500);\n\n    const handler = ev => {\n      const {\n        pid\n      } = ev.data;\n      if (id !== pid) return;\n      window.removeEventListener(\"message\", handler);\n      closedByHandler = true;\n      clearInterval(closedMonitor);\n      windowRef.close();\n\n      if (ev.data.data && ev.data.data.error) {\n        reject(new Error(ev.data.data.error));\n      } else {\n        resolve(ev.data.data);\n      }\n    };\n\n    window.addEventListener(\"message\", handler);\n  });\n}\nfunction constructURL(params) {\n  const {\n    baseURL,\n    query,\n    hash\n  } = params;\n  const url = new URL(baseURL);\n\n  if (query) {\n    Object.keys(query).forEach(key => {\n      url.searchParams.append(key, query[key]);\n    });\n  }\n\n  if (hash) {\n    const h = new URL(constructURL({\n      baseURL,\n      query: hash\n    })).searchParams.toString();\n    url.hash = h;\n  }\n\n  return url.toString();\n}\nfunction storageAvailable(type) {\n  let storageExists = false;\n  let storageLength = 0;\n  let storage;\n\n  try {\n    storage = window[type];\n    storageExists = true;\n    storageLength = storage.length;\n    const x = \"__storage_test__\";\n    storage.setItem(x, x);\n    storage.removeItem(x);\n    return true;\n  } catch (error) {\n    return error && ( // everything except Firefox\n    error.code === 22 || // Firefox\n    error.code === 1014 || // test name field too, because code might not be present\n    // everything except Firefox\n    error.name === \"QuotaExceededErro r\" || // Firefox\n    error.name === \"NS_ERROR_DOM_QUOTA_REACHED\") && // acknowledge QuotaExceededError only if there's something already stored\n    storageExists && storageLength !== 0;\n  }\n}\nconst sessionStorageAvailable = storageAvailable(\"sessionStorage\");\nconst localStorageAvailable = storageAvailable(\"localStorage\");\nfunction preloadIframe(url) {\n  try {\n    if (typeof document === \"undefined\") return;\n    const openloginIframeHtml = document.createElement(\"link\");\n    openloginIframeHtml.href = url;\n    openloginIframeHtml.crossOrigin = \"anonymous\";\n    openloginIframeHtml.type = \"text/html\";\n    openloginIframeHtml.rel = \"prefetch\";\n\n    if (openloginIframeHtml.relList && openloginIframeHtml.relList.supports) {\n      if (openloginIframeHtml.relList.supports(\"prefetch\")) {\n        document.head.appendChild(openloginIframeHtml);\n      }\n    }\n  } catch (error) {\n    log.error(error);\n  }\n}\nfunction getPopupFeatures() {\n  // Fixes dual-screen position                             Most browsers      Firefox\n  const dualScreenLeft = window.screenLeft !== undefined ? window.screenLeft : window.screenX;\n  const dualScreenTop = window.screenTop !== undefined ? window.screenTop : window.screenY;\n  const w = 1200;\n  const h = 700;\n  const width = window.innerWidth ? window.innerWidth : document.documentElement.clientWidth ? document.documentElement.clientWidth : window.screen.width;\n  const height = window.innerHeight ? window.innerHeight : document.documentElement.clientHeight ? document.documentElement.clientHeight : window.screen.height;\n  const systemZoom = 1; // No reliable estimate\n\n  const left = Math.abs((width - w) / 2 / systemZoom + dualScreenLeft);\n  const top = Math.abs((height - h) / 2 / systemZoom + dualScreenTop);\n  const features = \"titlebar=0,toolbar=0,status=0,location=0,menubar=0,height=\".concat(h / systemZoom, \",width=\").concat(w / systemZoom, \",top=\").concat(top, \",left=\").concat(left);\n  return features;\n}\n\nconst handleStream = (handle, eventName, handler) => {\n  const handlerWrapper = chunk => {\n    handler(chunk);\n    handle.removeListener(eventName, handlerWrapper);\n  };\n\n  handle.on(eventName, handlerWrapper);\n};\nclass Modal {\n  constructor(modalUrl) {\n    _defineProperty(this, \"modalUrl\", void 0);\n\n    _defineProperty(this, \"iframeElem\", void 0);\n\n    _defineProperty(this, \"initialized\", false);\n\n    _defineProperty(this, \"modalZIndex\", 99999);\n\n    _defineProperty(this, \"mux\", void 0);\n\n    _defineProperty(this, \"verifierStream\", void 0);\n\n    this.modalUrl = modalUrl;\n  }\n\n  async init() {\n    await this.initIFrame(this.modalUrl);\n    this.setupStream();\n  }\n\n  setupStream() {\n    if (this.iframeElem === null) throw new Error(\"iframe is null\");\n    this.mux = setupMultiplex(new PostMessageStream({\n      name: \"modal_iframe_rpc\",\n      target: \"modal_rpc\",\n      targetWindow: this.iframeElem.contentWindow,\n      targetOrigin: new URL(this.modalUrl).origin\n    }));\n    this.verifierStream = this.mux.createStream(\"verifier\");\n  }\n\n  async initIFrame(src) {\n    await documentReady();\n    const documentIFrameElem = document.getElementById(modalDOMElementID);\n\n    if (documentIFrameElem) {\n      documentIFrameElem.remove();\n      log.info(\"already initialized, removing previous modal iframe\");\n    }\n\n    this.iframeElem = htmlToElement(\"<iframe\\n        id=\".concat(modalDOMElementID, \"\\n        class=\\\"torusIframe\\\"\\n        src=\\\"\").concat(src, \"\\\"\\n        style=\\\"display: none; position: fixed; top: 0; right: 0; width: 100%;\\n        height: 100%; border: none; border-radius: 0; z-index: \").concat(this.modalZIndex.toString(), \"\\\"\\n      ></iframe>\"));\n\n    this._hideModal();\n\n    document.body.appendChild(this.iframeElem);\n    return new Promise(resolve => {\n      this.iframeElem.onload = () => {\n        this.initialized = true;\n        resolve();\n      };\n    });\n  }\n\n  _showModal() {\n    const style = {};\n    style.display = \"block\";\n    style.position = \"fixed\";\n    style.width = \"100%\";\n    style.height = \"100%\";\n    style.top = \"0px\";\n    style.right = \"0px\";\n    style.left = \"0px\";\n    style.bottom = \"0px\";\n    style.border = \"0\";\n    style[\"z-index\"] = this.modalZIndex;\n    this.iframeElem.setAttribute(\"style\", Object.entries(style).map(_ref => {\n      let [k, v] = _ref;\n      return \"\".concat(k, \":\").concat(v);\n    }).join(\";\"));\n  }\n\n  _hideModal() {\n    const style = {};\n    style.display = \"none\";\n    style.position = \"fixed\";\n    style.width = \"100%\";\n    style.height = \"100%\";\n    style.top = \"0px\";\n    style.right = \"0px\";\n    style.left = \"0px\";\n    style.bottom = \"0px\";\n    style.border = \"0\";\n    style[\"z-index\"] = this.modalZIndex;\n    this.iframeElem.setAttribute(\"style\", Object.entries(style).map(_ref2 => {\n      let [k, v] = _ref2;\n      return \"\".concat(k, \":\").concat(v);\n    }).join(\";\"));\n  }\n\n  async _prompt(clientId, whiteLabel, loginConfig, cb) {\n    this._showModal();\n\n    const modalHandler = chunk => {\n      this._hideModal();\n\n      cb(chunk);\n    };\n\n    handleStream(this.verifierStream, \"data\", modalHandler);\n    this.verifierStream.write({\n      name: \"prompt\",\n      clientId,\n      whiteLabel,\n      loginConfig\n    });\n  }\n\n  async cleanup() {\n    await documentReady();\n    const documentIFrameElem = document.getElementById(modalDOMElementID);\n\n    if (documentIFrameElem) {\n      documentIFrameElem.remove();\n      this.iframeElem = null;\n    }\n\n    this.initialized = false;\n  }\n\n}\n\nclass MemoryStore {\n  constructor() {\n    _defineProperty(this, \"store\", {});\n  }\n\n  getItem(key) {\n    return this.store[key];\n  }\n\n  setItem(key, value) {\n    this.store[key] = value;\n  }\n\n}\n\nclass OpenLoginStore {\n  // eslint-disable-next-line no-use-before-define\n  constructor(storage) {\n    _defineProperty(this, \"storage\", void 0);\n\n    this.storage = storage;\n\n    try {\n      if (!storage.getItem(storeKey)) {\n        this.resetStore();\n      }\n    } catch (error) {// Storage is not available\n    }\n  }\n\n  static getInstance() {\n    if (!this.instance) {\n      this.instance = new this(localStorageAvailable ? localStorage : new MemoryStore());\n    }\n\n    return this.instance;\n  }\n\n  toJSON() {\n    return this.storage.getItem(storeKey);\n  }\n\n  resetStore() {\n    const currStore = this.getStore();\n    this.storage.setItem(storeKey, JSON.stringify({}));\n    return currStore;\n  }\n\n  getStore() {\n    return JSON.parse(this.storage.getItem(storeKey));\n  }\n\n  get(key) {\n    const store = JSON.parse(this.storage.getItem(storeKey));\n    return store[key];\n  }\n\n  set(key, value) {\n    const store = JSON.parse(this.storage.getItem(storeKey));\n    store[key] = value;\n    this.storage.setItem(storeKey, JSON.stringify(store));\n  }\n\n}\n\n_defineProperty(OpenLoginStore, \"instance\", void 0);\n\nclass Provider extends SafeEventEmitter {\n  constructor() {\n    super(...arguments);\n\n    _defineProperty(this, \"iframeElem\", null);\n\n    _defineProperty(this, \"rpcStream\", void 0);\n\n    _defineProperty(this, \"iframeUrl\", void 0);\n\n    _defineProperty(this, \"rpcEngine\", void 0);\n\n    _defineProperty(this, \"initialized\", void 0);\n\n    _defineProperty(this, \"mux\", void 0);\n  }\n\n  init(_ref) {\n    let {\n      iframeElem,\n      iframeUrl\n    } = _ref;\n    this.iframeElem = iframeElem;\n    this.iframeUrl = iframeUrl;\n    this.setupStream();\n    this.initialized = true;\n  }\n\n  setupStream() {\n    if (this.iframeElem === null) throw new Error(\"iframe is null\");\n    this.rpcStream = new PostMessageStream({\n      name: \"embed_rpc\",\n      target: \"iframe_rpc\",\n      targetWindow: this.iframeElem.contentWindow,\n      targetOrigin: new URL(this.iframeUrl).origin\n    });\n    this.mux = setupMultiplex(this.rpcStream);\n    const JRPCConnection = createStreamMiddleware();\n    pump(JRPCConnection.stream, this.mux.createStream(\"jrpc\"), JRPCConnection.stream, error => {\n      log.error(\"JRPC connection broken\", error);\n    });\n    const rpcEngine = new JRPCEngine();\n    rpcEngine.push(createIdRemapMiddleware());\n    rpcEngine.push(JRPCConnection.middleware);\n    this.rpcEngine = rpcEngine;\n  }\n\n  cleanup() {\n    this.iframeElem = null;\n    this.initialized = false;\n  }\n\n  _rpcRequest(payload, callback) {\n    if (!payload.jsonrpc) {\n      payload.jsonrpc = \"2.0\";\n    }\n\n    if (!payload.id) {\n      payload.id = randomId();\n    }\n\n    this.rpcEngine.handle(payload, callback);\n  }\n\n}\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); enumerableOnly && (symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; })), keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = null != arguments[i] ? arguments[i] : {}; i % 2 ? ownKeys(Object(source), !0).forEach(function (key) { _defineProperty(target, key, source[key]); }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)) : ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } return target; }\npreloadIframe(\"https://app.openlogin.com/sdk-modal\");\n\nclass OpenLogin {\n  constructor(options) {\n    var _options$no3PC, _options$_startUrl, _options$_popupUrl, _options$redirectUrl, _options$uxMode, _options$replaceUrlOn, _options$originData, _options$whiteLabel, _options$loginConfig;\n\n    _defineProperty(this, \"provider\", void 0);\n\n    _defineProperty(this, \"state\", void 0);\n\n    _defineProperty(this, \"modal\", void 0);\n\n    this.provider = new Proxy(new Provider(), {\n      deleteProperty: () => true // work around for web3\n\n    });\n\n    if (!options._iframeUrl) {\n      if (options.network === OPENLOGIN_NETWORK.MAINNET) {\n        options._iframeUrl = \"https://app.openlogin.com\";\n      } else if (options.network === OPENLOGIN_NETWORK.CYAN) {\n        options._iframeUrl = \"https://cyan.openlogin.com\";\n      } else if (options.network === OPENLOGIN_NETWORK.TESTNET) {\n        options._iframeUrl = \"https://beta.openlogin.com\";\n      } else if (options.network === OPENLOGIN_NETWORK.DEVELOPMENT) {\n        options._iframeUrl = \"http://localhost:3000\";\n      }\n    }\n\n    if (!options._iframeUrl) {\n      throw new Error(\"unspecified network and iframeUrl\");\n    }\n\n    this.modal = new Modal(\"\".concat(options._iframeUrl, \"/sdk-modal\"));\n    this.initState(_objectSpread(_objectSpread({}, options), {}, {\n      no3PC: (_options$no3PC = options.no3PC) !== null && _options$no3PC !== void 0 ? _options$no3PC : false,\n      _iframeUrl: options._iframeUrl,\n      _startUrl: (_options$_startUrl = options._startUrl) !== null && _options$_startUrl !== void 0 ? _options$_startUrl : \"\".concat(options._iframeUrl, \"/start\"),\n      _popupUrl: (_options$_popupUrl = options._popupUrl) !== null && _options$_popupUrl !== void 0 ? _options$_popupUrl : \"\".concat(options._iframeUrl, \"/popup-window\"),\n      redirectUrl: (_options$redirectUrl = options.redirectUrl) !== null && _options$redirectUrl !== void 0 ? _options$redirectUrl : \"\".concat(window.location.protocol, \"//\").concat(window.location.host).concat(window.location.pathname),\n      uxMode: (_options$uxMode = options.uxMode) !== null && _options$uxMode !== void 0 ? _options$uxMode : UX_MODE.REDIRECT,\n      replaceUrlOnRedirect: (_options$replaceUrlOn = options.replaceUrlOnRedirect) !== null && _options$replaceUrlOn !== void 0 ? _options$replaceUrlOn : true,\n      originData: (_options$originData = options.originData) !== null && _options$originData !== void 0 ? _options$originData : {\n        [window.location.origin]: \"\"\n      },\n      whiteLabel: (_options$whiteLabel = options.whiteLabel) !== null && _options$whiteLabel !== void 0 ? _options$whiteLabel : {},\n      loginConfig: (_options$loginConfig = options.loginConfig) !== null && _options$loginConfig !== void 0 ? _options$loginConfig : {}\n    }));\n  }\n\n  get privKey() {\n    return this.state.privKey ? this.state.privKey.padStart(64, \"0\") : \"\";\n  }\n\n  initState(options) {\n    this.state = {\n      uxMode: options.uxMode,\n      network: options.network,\n      store: OpenLoginStore.getInstance(),\n      iframeUrl: options._iframeUrl,\n      startUrl: options._startUrl,\n      popupUrl: options._popupUrl,\n      clientId: options.clientId,\n      redirectUrl: options.redirectUrl,\n      replaceUrlOnRedirect: options.replaceUrlOnRedirect,\n      originData: options.originData,\n      loginConfig: options.loginConfig,\n      support3PC: !options.no3PC,\n      whiteLabel: options.whiteLabel\n    };\n  }\n\n  async init() {\n    if (this.state.support3PC) {\n      await Promise.all([this.modal.init(), this.updateOriginData()]);\n      this.provider.init({\n        iframeElem: this.modal.iframeElem,\n        iframeUrl: this.state.iframeUrl\n      });\n\n      this._syncState(getHashQueryParams(this.state.replaceUrlOnRedirect));\n\n      const res = await this._check3PCSupport();\n      this.state.support3PC = !!res.support3PC;\n\n      if (this.state.support3PC) {\n        this._syncState(await this._getData());\n      }\n    } else {\n      await this.updateOriginData();\n\n      this._syncState(getHashQueryParams(this.state.replaceUrlOnRedirect));\n    }\n  }\n\n  async updateOriginData() {\n    const filteredOriginData = JSON.parse(JSON.stringify(this.state.originData));\n    Object.keys(filteredOriginData).forEach(key => {\n      if (filteredOriginData[key] === \"\") delete filteredOriginData[key];\n    });\n    const [whitelist, whiteLabel] = await Promise.all([this.getWhitelist(), this.getWhiteLabel()]);\n\n    this._syncState({\n      originData: _objectSpread(_objectSpread({}, whitelist), filteredOriginData),\n      whiteLabel: _objectSpread(_objectSpread({}, whiteLabel), this.state.whiteLabel)\n    });\n  }\n\n  async getWhitelist() {\n    try {\n      const {\n        clientId\n      } = this.state;\n\n      if (!clientId) {\n        throw new Error(\"unspecified clientId\");\n      }\n\n      const url = new URL(\"https://api.developer.tor.us/whitelist\");\n      url.searchParams.append(\"project_id\", this.state.clientId);\n      const res = await get(url.href);\n      return res.signed_urls;\n    } catch (_) {\n      // fail silently\n      return {};\n    }\n  }\n\n  async getWhiteLabel() {\n    try {\n      const {\n        clientId\n      } = this.state;\n\n      if (!clientId) {\n        throw new Error(\"unspecified clientId\");\n      }\n\n      const url = new URL(\"https://api.developer.tor.us/whitelabel\");\n      url.searchParams.append(\"project_id\", this.state.clientId);\n      const res = await get(url.href);\n      return res.whiteLabel;\n    } catch (_) {\n      // fail silently\n      return {};\n    }\n  }\n\n  async _fastLogin(params) {\n    const defaultParams = {\n      redirectUrl: this.state.redirectUrl\n    };\n\n    const loginParams = _objectSpread(_objectSpread({}, defaultParams), params);\n\n    const res = await this.request({\n      params: [_objectSpread(_objectSpread({}, loginParams), {}, {\n        fastLogin: true\n      })],\n      method: OPENLOGIN_METHOD.LOGIN,\n      startUrl: this.state.startUrl,\n      popupUrl: this.state.popupUrl,\n      allowedInteractions: [ALLOWED_INTERACTIONS.POPUP, ALLOWED_INTERACTIONS.REDIRECT]\n    });\n    this.state.privKey = res.privKey;\n    return res;\n  }\n\n  async login(params) {\n    if (params !== null && params !== void 0 && params.loginProvider) {\n      return this._selectedLogin(params);\n    }\n\n    return this._modal(params);\n  }\n\n  async _selectedLogin(params) {\n    const defaultParams = {\n      redirectUrl: this.state.redirectUrl\n    };\n\n    const loginParams = _objectSpread(_objectSpread({\n      loginProvider: params.loginProvider\n    }, defaultParams), params); // fast login flow\n    // if (this.state.store.get(\"touchIDPreference\") === \"enabled\" && !loginParams.extraLoginOptions?.login_hint) {\n    //   return this._fastLogin(loginParams);\n    // }\n\n\n    const res = await this.request({\n      method: OPENLOGIN_METHOD.LOGIN,\n      allowedInteractions: [UX_MODE.REDIRECT, UX_MODE.POPUP],\n      startUrl: this.state.startUrl,\n      popupUrl: this.state.popupUrl,\n      params: [loginParams]\n    });\n    this.state.privKey = res.privKey;\n\n    if (res.store) {\n      this._syncState(res);\n    } else if (this.state.privKey && this.state.support3PC) {\n      this._syncState(await this._getData());\n    }\n\n    return {\n      privKey: this.privKey\n    };\n  }\n\n  async logout() {\n    let logoutParams = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n    const params = {}; // defaults\n\n    params.redirectUrl = this.state.redirectUrl;\n    params._clientId = this.state.clientId;\n\n    if (logoutParams.clientId) {\n      params._clientId = logoutParams.clientId;\n    }\n\n    if (logoutParams.fastLogin !== undefined) {\n      params.fastLogin = logoutParams.fastLogin;\n    }\n\n    if (logoutParams.redirectUrl !== undefined) {\n      params.redirectUrl = logoutParams.redirectUrl;\n    }\n\n    const res = await this.request({\n      method: OPENLOGIN_METHOD.LOGOUT,\n      params: [params],\n      startUrl: this.state.startUrl,\n      popupUrl: this.state.popupUrl,\n      allowedInteractions: [ALLOWED_INTERACTIONS.JRPC, ALLOWED_INTERACTIONS.POPUP, ALLOWED_INTERACTIONS.REDIRECT]\n    });\n    this.state.privKey = \"\"; // if (!params.fastLogin) this.state.store.set(\"touchIDPreference\", \"disabled\");\n\n    return res;\n  }\n\n  async request(args) {\n    var _params$0$redirectUrl;\n\n    const pid = randomId();\n    let {\n      params\n    } = args; // Note: _origin is added later in postMessageStream for jrpc requests\n    // do not add it here since its used for checking postMessage constraints\n\n    const session = {};\n    if (params.length !== 1) throw new Error(\"request params array should have only one element\");\n    const {\n      startUrl,\n      popupUrl,\n      method,\n      allowedInteractions\n    } = args;\n    if (allowedInteractions.length === 0) throw new Error(\"no allowed interactions\");\n\n    if (this.state.clientId) {\n      session._clientId = this.state.clientId;\n    }\n\n    if (this.privKey) {\n      const userData = {\n        clientId: session._clientId,\n        timestamp: Date.now().toString()\n      };\n      const sig = await sign(Buffer.from(this.privKey, \"hex\"), Buffer.from(keccak(\"keccak256\").update(JSON.stringify(userData)).digest(\"hex\"), \"hex\"));\n      session._user = getPublic(Buffer.from(this.privKey, \"hex\")).toString(\"hex\");\n      session._userSig = base64url.encode(sig);\n      session._userData = userData;\n    }\n\n    session._originData = this.state.originData;\n    session._whiteLabelData = this.state.whiteLabel;\n    session._loginConfig = this.state.loginConfig; // add in session data (allow overrides)\n\n    params = [_objectSpread(_objectSpread({}, session), params[0])]; // use JRPC where possible\n\n    if (this.state.support3PC && allowedInteractions.includes(ALLOWED_INTERACTIONS.JRPC)) {\n      return this._jrpcRequest({\n        method,\n        params\n      });\n    } // set origin\n\n\n    params[0]._origin = new URL((_params$0$redirectUrl = params[0].redirectUrl) !== null && _params$0$redirectUrl !== void 0 ? _params$0$redirectUrl : this.state.redirectUrl).origin; // preset params\n\n    if (this.state.support3PC) {\n      // set params first if 3PC supported\n      await this._setPIDData(pid, params); // eslint-disable-next-line require-atomic-updates\n\n      params = [{}];\n    }\n\n    if (!startUrl || !popupUrl) {\n      throw new Error(\"no url for redirect / popup flow\");\n    } // method and pid are always in URL hash params\n    // convert params from JSON to base64\n\n\n    if (this.state.uxMode === UX_MODE.REDIRECT) {\n      // if redirects preferred, check for redirect flows first, then check for popup flow\n      if (allowedInteractions.includes(ALLOWED_INTERACTIONS.REDIRECT)) {\n        // give time for synchronous methods to complete before redirect\n        setTimeout(() => {\n          window.location.href = constructURL({\n            baseURL: startUrl,\n            hash: {\n              b64Params: jsonToBase64(params[0]),\n              _pid: pid,\n              _method: method\n            }\n          });\n        }, 50);\n        return {};\n      }\n\n      if (allowedInteractions.includes(ALLOWED_INTERACTIONS.POPUP)) {\n        const u = new URL(constructURL({\n          baseURL: popupUrl,\n          hash: {\n            b64Params: jsonToBase64(params[0]),\n            _pid: pid,\n            _method: method\n          }\n        }));\n        const windowRef = window.open(u.toString(), \"_blank\", getPopupFeatures());\n        return awaitReq(pid, windowRef);\n      }\n    } else {\n      // if popups preferred, check for popup flows first, then check for redirect flow\n      if (allowedInteractions.includes(ALLOWED_INTERACTIONS.POPUP)) {\n        const u = new URL(constructURL({\n          baseURL: popupUrl,\n          hash: {\n            b64Params: jsonToBase64(params[0]),\n            _pid: pid,\n            _method: method\n          }\n        }));\n        const windowRef = window.open(u.toString(), \"_blank\", getPopupFeatures());\n        return awaitReq(pid, windowRef);\n      }\n\n      if (allowedInteractions.includes(ALLOWED_INTERACTIONS.REDIRECT)) {\n        // give time for synchronous methods to complete before redirect\n        setTimeout(() => {\n          window.location.href = constructURL({\n            baseURL: startUrl,\n            hash: {\n              b64Params: jsonToBase64(params[0]),\n              _pid: pid,\n              _method: method\n            }\n          });\n        }, 50);\n        return null;\n      }\n    }\n\n    throw new Error(\"no matching allowed interactions\");\n  }\n\n  async _jrpcRequest(args) {\n    // await this.initialized;\n    if (!args || typeof args !== \"object\" || Array.isArray(args)) {\n      throw new Error(\"invalid request args\");\n    }\n\n    const {\n      method,\n      params\n    } = args;\n\n    if (typeof method !== \"string\" || method.length === 0) {\n      throw new Error(\"invalid request method\");\n    }\n\n    if (params === undefined || !Array.isArray(params)) {\n      throw new Error(\"invalid request params\");\n    }\n\n    if (params.length === 0) {\n      params.push({});\n    }\n\n    return new Promise((resolve, reject) => {\n      this.provider._rpcRequest({\n        method,\n        params\n      }, getRpcPromiseCallback(resolve, reject));\n    });\n  }\n\n  async _check3PCSupport() {\n    return this._jrpcRequest({\n      method: OPENLOGIN_METHOD.CHECK_3PC_SUPPORT,\n      params: [{\n        _originData: this.state.originData\n      }]\n    });\n  }\n\n  async _setPIDData(pid, data) {\n    await this.request({\n      allowedInteractions: [ALLOWED_INTERACTIONS.JRPC],\n      method: OPENLOGIN_METHOD.SET_PID_DATA,\n      params: [{\n        pid,\n        data: data[0]\n      }]\n    });\n  }\n\n  async _getData() {\n    return this.request({\n      allowedInteractions: [ALLOWED_INTERACTIONS.JRPC],\n      method: OPENLOGIN_METHOD.GET_DATA,\n      params: [{}]\n    });\n  }\n\n  _syncState(newState) {\n    if (newState.store) {\n      if (typeof newState.store !== \"object\") {\n        throw new Error(\"expected store to be an object\");\n      }\n\n      Object.keys(newState.store).forEach(key => {\n        // if privKey is available then user is not logged out, but in popup mode store info is not available.\n        // so we don't want to overwrite the local store if privKey is available\n        // and if latest iframe store data is not available\n        if (newState.privKey) {\n          if (newState.store[key]) {\n            this.state.store.set(key, newState.store[key]);\n          }\n        } else {\n          this.state.store.set(key, newState.store[key]);\n        }\n      });\n    }\n\n    const {\n      store\n    } = this.state;\n    this.state = _objectSpread(_objectSpread(_objectSpread({}, this.state), newState), {}, {\n      store\n    });\n  }\n\n  async _modal(params) {\n    return new Promise((resolve, reject) => {\n      this.modal._prompt(this.state.clientId, this.state.whiteLabel, this.state.loginConfig, async chunk => {\n        if (chunk.cancel) {\n          reject(new Error(\"user canceled login\"));\n        } else {\n          try {\n            const selectedLoginResponse = await this._selectedLogin(merge(params, chunk));\n            resolve(selectedLoginResponse);\n          } catch (error) {\n            reject(error);\n          }\n        }\n      });\n    });\n  }\n\n  async _cleanup() {\n    await this.modal.cleanup();\n    this.provider.cleanup();\n  }\n\n  async encrypt(message, privateKey) {\n    let privKey = privateKey;\n\n    if (!privKey) {\n      privKey = this.privKey;\n    } // validations\n\n\n    if (!/^[0-9a-fA-f]{64}$/.exec(privKey)) {\n      if (privKey === \"\" || privKey === undefined) {\n        throw new Error(\"private key cannot be empty\");\n      } else {\n        throw new Error(\"invalid private key in encrypt\");\n      }\n    }\n\n    return encrypt(getPublic(Buffer.from(privKey, \"hex\")), message);\n  }\n\n  async decrypt(ciphertext, privateKey) {\n    let privKey = privateKey;\n\n    if (!privKey) {\n      privKey = this.privKey;\n    } // validations\n\n\n    if (!/^[0-9a-fA-f]{64}$/.exec(privKey)) {\n      if (privKey === \"\" || privKey === undefined) {\n        throw new Error(\"private key cannot be empty\");\n      } else {\n        throw new Error(\"invalid private key in decrypt\");\n      }\n    }\n\n    return decrypt(Buffer.from(privKey, \"hex\"), ciphertext);\n  }\n\n  async getUserInfo() {\n    if (this.privKey) {\n      const storeData = this.state.store.getStore();\n      const userInfo = {\n        email: storeData.email || \"\",\n        name: storeData.name || \"\",\n        profileImage: storeData.profileImage || \"\",\n        aggregateVerifier: storeData.aggregateVerifier || \"\",\n        verifier: storeData.verifier || \"\",\n        verifierId: storeData.verifierId || \"\",\n        typeOfLogin: storeData.typeOfLogin || \"\",\n        dappShare: storeData.dappShare || \"\"\n      };\n      return userInfo;\n    }\n\n    throw new Error(\"user should be logged in to fetch userInfo\");\n  }\n\n  async getEncodedLoginUrl(loginParams) {\n    const {\n      redirectUrl\n    } = loginParams;\n    const {\n      clientId\n    } = this.state;\n\n    if (!this.state.originData[origin]) {\n      await this.updateOriginData();\n    }\n\n    const dataObject = _objectSpread({\n      _clientId: clientId,\n      _origin: new URL(redirectUrl).origin,\n      _originData: this.state.originData,\n      redirectUrl\n    }, loginParams);\n\n    const b64Params = jsonToBase64(dataObject);\n    const hashParams = {\n      b64Params,\n      _method: \"openlogin_login\"\n    };\n    return constructURL({\n      baseURL: \"\".concat(this.state.iframeUrl, \"/start\"),\n      hash: hashParams\n    });\n  }\n\n}\n\nexport { ALLOWED_INTERACTIONS, LOGIN_PROVIDER, MFA_LEVELS, OPENLOGIN_METHOD, OPENLOGIN_NETWORK, OpenLoginStore, Provider, UX_MODE, awaitReq, constructURL, OpenLogin as default, documentReady, getHashQueryParams, getPopupFeatures, htmlToElement, localStorageAvailable, log as loglevel, modalDOMElementID, preloadIframe, sessionStorageAvailable, storageAvailable, storeKey, whitelistUrl };\n//# sourceMappingURL=openlogin.esm.js.map\n"]},"metadata":{},"sourceType":"module"}